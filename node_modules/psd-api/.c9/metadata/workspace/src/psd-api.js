{"filter":false,"title":"psd-api.js","tooltip":"/src/psd-api.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":26,"column":24},"end":{"row":26,"column":25},"action":"insert","lines":["s"],"id":754}],[{"start":{"row":26,"column":25},"end":{"row":26,"column":26},"action":"insert","lines":["t"],"id":755}],[{"start":{"row":26,"column":26},"end":{"row":26,"column":27},"action":"insert","lines":["r"],"id":756}],[{"start":{"row":26,"column":28},"end":{"row":26,"column":29},"action":"insert","lines":[";"],"id":757}],[{"start":{"row":24,"column":8},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":758},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":31},"action":"insert","lines":["var DEBUG_MODE = false;"],"id":759}],[{"start":{"row":25,"column":31},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":760},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":8},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":761},{"start":{"row":27,"column":0},"end":{"row":27,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":27,"column":8},"end":{"row":27,"column":9},"action":"insert","lines":["/"],"id":762}],[{"start":{"row":27,"column":9},"end":{"row":27,"column":10},"action":"insert","lines":["*"],"id":763}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":["*"],"id":764}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"insert","lines":["/"],"id":765}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":[" "],"id":766}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"insert","lines":["F"],"id":767}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"remove","lines":["F"],"id":768}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"remove","lines":[" "],"id":769}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":[" "],"id":770}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"remove","lines":[" "],"id":771}],[{"start":{"row":30,"column":10},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":772},{"start":{"row":31,"column":0},"end":{"row":31,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":24,"column":0},"end":{"row":31,"column":8},"action":"remove","lines":["        ","        var DEBUG_MODE = false;","        ","        /**/","        priv.debugOut = function(str){","            console.log(str);   ","        };","        "],"id":773}],[{"start":{"row":167,"column":0},"end":{"row":167,"column":16},"action":"remove","lines":["                "],"id":774},{"start":{"row":169,"column":18},"end":{"row":169,"column":19},"action":"insert","lines":[" "]},{"start":{"row":169,"column":50},"end":{"row":169,"column":51},"action":"insert","lines":[" "]},{"start":{"row":258,"column":0},"end":{"row":258,"column":8},"action":"remove","lines":["        "]},{"start":{"row":271,"column":0},"end":{"row":271,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":193,"column":40},"end":{"row":194,"column":0},"action":"insert","lines":["",""],"id":775},{"start":{"row":194,"column":0},"end":{"row":194,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":194,"column":12},"end":{"row":194,"column":13},"action":"insert","lines":["p"],"id":776}],[{"start":{"row":194,"column":13},"end":{"row":194,"column":14},"action":"insert","lines":["r"],"id":777}],[{"start":{"row":194,"column":14},"end":{"row":194,"column":15},"action":"insert","lines":["i"],"id":778}],[{"start":{"row":194,"column":15},"end":{"row":194,"column":16},"action":"insert","lines":["v"],"id":779}],[{"start":{"row":194,"column":16},"end":{"row":194,"column":17},"action":"insert","lines":["."],"id":780}],[{"start":{"row":194,"column":17},"end":{"row":194,"column":18},"action":"insert","lines":["d"],"id":781}],[{"start":{"row":194,"column":18},"end":{"row":194,"column":19},"action":"insert","lines":["a"],"id":782}],[{"start":{"row":194,"column":19},"end":{"row":194,"column":20},"action":"insert","lines":["t"],"id":783}],[{"start":{"row":194,"column":20},"end":{"row":194,"column":21},"action":"insert","lines":["a"],"id":784}],[{"start":{"row":194,"column":21},"end":{"row":194,"column":22},"action":"insert","lines":[" "],"id":785}],[{"start":{"row":194,"column":22},"end":{"row":194,"column":23},"action":"insert","lines":["="],"id":786}],[{"start":{"row":194,"column":23},"end":{"row":194,"column":24},"action":"insert","lines":[" "],"id":787}],[{"start":{"row":194,"column":24},"end":{"row":194,"column":26},"action":"insert","lines":["[]"],"id":788}],[{"start":{"row":194,"column":26},"end":{"row":194,"column":27},"action":"insert","lines":[";"],"id":789}],[{"start":{"row":194,"column":26},"end":{"row":194,"column":27},"action":"remove","lines":[";"],"id":790}],[{"start":{"row":194,"column":26},"end":{"row":194,"column":27},"action":"insert","lines":[","],"id":791}],[{"start":{"row":194,"column":27},"end":{"row":194,"column":28},"action":"insert","lines":["p"],"id":792}],[{"start":{"row":194,"column":28},"end":{"row":194,"column":29},"action":"insert","lines":["r"],"id":793}],[{"start":{"row":194,"column":29},"end":{"row":194,"column":30},"action":"insert","lines":["i"],"id":794}],[{"start":{"row":194,"column":30},"end":{"row":194,"column":31},"action":"insert","lines":["v"],"id":795}],[{"start":{"row":194,"column":30},"end":{"row":194,"column":31},"action":"remove","lines":["v"],"id":796}],[{"start":{"row":194,"column":29},"end":{"row":194,"column":30},"action":"remove","lines":["i"],"id":797}],[{"start":{"row":194,"column":28},"end":{"row":194,"column":29},"action":"remove","lines":["r"],"id":798}],[{"start":{"row":194,"column":27},"end":{"row":194,"column":28},"action":"remove","lines":["p"],"id":799}],[{"start":{"row":194,"column":27},"end":{"row":194,"column":28},"action":"insert","lines":[" "],"id":800}],[{"start":{"row":194,"column":28},"end":{"row":194,"column":29},"action":"insert","lines":["p"],"id":801}],[{"start":{"row":194,"column":29},"end":{"row":194,"column":30},"action":"insert","lines":["r"],"id":802}],[{"start":{"row":194,"column":30},"end":{"row":194,"column":31},"action":"insert","lines":["i"],"id":803}],[{"start":{"row":194,"column":31},"end":{"row":194,"column":32},"action":"insert","lines":["v"],"id":804}],[{"start":{"row":194,"column":32},"end":{"row":194,"column":33},"action":"insert","lines":["."],"id":805}],[{"start":{"row":194,"column":33},"end":{"row":194,"column":34},"action":"insert","lines":["d"],"id":806}],[{"start":{"row":194,"column":34},"end":{"row":194,"column":35},"action":"insert","lines":["e"],"id":807}],[{"start":{"row":194,"column":35},"end":{"row":194,"column":36},"action":"insert","lines":["s"],"id":808}],[{"start":{"row":194,"column":36},"end":{"row":194,"column":37},"action":"insert","lines":["c"],"id":809}],[{"start":{"row":194,"column":37},"end":{"row":194,"column":38},"action":"insert","lines":[" "],"id":810}],[{"start":{"row":194,"column":38},"end":{"row":194,"column":39},"action":"insert","lines":["="],"id":811}],[{"start":{"row":194,"column":39},"end":{"row":194,"column":40},"action":"insert","lines":[" "],"id":812}],[{"start":{"row":194,"column":40},"end":{"row":194,"column":42},"action":"insert","lines":["[]"],"id":813}],[{"start":{"row":194,"column":42},"end":{"row":194,"column":43},"action":"insert","lines":[";"],"id":814}],[{"start":{"row":194,"column":43},"end":{"row":194,"column":44},"action":"insert","lines":[" "],"id":815}],[{"start":{"row":194,"column":44},"end":{"row":194,"column":45},"action":"insert","lines":["/"],"id":816}],[{"start":{"row":194,"column":45},"end":{"row":194,"column":46},"action":"insert","lines":["/"],"id":817}],[{"start":{"row":194,"column":46},"end":{"row":194,"column":47},"action":"insert","lines":[" "],"id":818}],[{"start":{"row":194,"column":47},"end":{"row":194,"column":48},"action":"insert","lines":["r"],"id":819}],[{"start":{"row":194,"column":48},"end":{"row":194,"column":49},"action":"insert","lines":["e"],"id":820}],[{"start":{"row":194,"column":49},"end":{"row":194,"column":50},"action":"insert","lines":["s"],"id":821}],[{"start":{"row":194,"column":50},"end":{"row":194,"column":51},"action":"insert","lines":["e"],"id":873}],[{"start":{"row":194,"column":51},"end":{"row":194,"column":52},"action":"insert","lines":["t"],"id":874}],[{"start":{"row":21,"column":12},"end":{"row":21,"column":35},"action":"remove","lines":["priv.form = {}, // form"],"id":875}],[{"start":{"row":21,"column":8},"end":{"row":21,"column":12},"action":"remove","lines":["    "],"id":876}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":8},"action":"remove","lines":["    "],"id":877}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"remove","lines":["    "],"id":878}],[{"start":{"row":20,"column":38},"end":{"row":21,"column":1},"action":"remove","lines":[""," "],"id":879}],[{"start":{"row":22,"column":68},"end":{"row":22,"column":69},"action":"insert","lines":["\\"],"id":880},{"start":{"row":22,"column":69},"end":{"row":23,"column":0},"action":"insert","lines":["",""]},{"start":{"row":23,"column":0},"end":{"row":23,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":35},"action":"insert","lines":["priv.form = {}, // form"],"id":881}],[{"start":{"row":23,"column":8},"end":{"row":23,"column":12},"action":"remove","lines":["    "],"id":882},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":8},"end":{"row":26,"column":12},"action":"insert","lines":["    "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "]},{"start":{"row":27,"column":14},"end":{"row":27,"column":16},"action":"insert","lines":["  "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":[" "]},{"start":{"row":29,"column":13},"end":{"row":29,"column":16},"action":"insert","lines":["   "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":21,"column":21},"end":{"row":21,"column":22},"action":"insert","lines":["."],"id":883}],[{"start":{"row":21,"column":22},"end":{"row":21,"column":23},"action":"insert","lines":["S"],"id":884}],[{"start":{"row":21,"column":23},"end":{"row":21,"column":24},"action":"insert","lines":["t"],"id":885}],[{"start":{"row":21,"column":24},"end":{"row":21,"column":25},"action":"insert","lines":["u"],"id":886}],[{"start":{"row":21,"column":25},"end":{"row":21,"column":26},"action":"insert","lines":["d"],"id":887}],[{"start":{"row":21,"column":25},"end":{"row":21,"column":26},"action":"remove","lines":["d"],"id":894}],[{"start":{"row":21,"column":24},"end":{"row":21,"column":25},"action":"remove","lines":["u"],"id":895}],[{"start":{"row":21,"column":23},"end":{"row":21,"column":24},"action":"remove","lines":["t"],"id":896}],[{"start":{"row":21,"column":22},"end":{"row":21,"column":23},"action":"remove","lines":["S"],"id":897}],[{"start":{"row":21,"column":21},"end":{"row":21,"column":22},"action":"remove","lines":["."],"id":898}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":904,"ignore":true},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""]},{"start":{"row":9,"column":7},"end":{"row":9,"column":8},"action":"remove","lines":["p"]},{"start":{"row":9,"column":7},"end":{"row":9,"column":8},"action":"insert","lines":["P"]},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":31,"column":0},"end":{"row":32,"column":50},"action":"remove","lines":["","        /* Generates new query object for the form"]},{"start":{"row":31,"column":0},"end":{"row":54,"column":7},"action":"insert","lines":["=======","            priv.form = {}, // form","            priv.directoryPage = {}, // directory page that is returned from the server","            priv.directoryPage.desc = [], // description elements from the directory page","            priv.directoryPage.data = []; // data elements from the directory page","","","        /* Selectors used for searching HTML */","        priv.selectors = {","            TABLES: \"body > div > form > table\", // the selector for all the tables on the page for all the students","            MATCHES: \"b\", // the number of MATCHES for each student","            DESC: \"th\", // the descriptions of the student such as name, email, etc","            DATA: \"td\" // the data for the descriptions","        };",">>>>>>> b7f92804f06a55ccb44d9529d3bfda45d94bbc15","","        /**","        * Generates new query object for the form.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","       "]},{"start":{"row":59,"column":43},"end":{"row":59,"column":53},"action":"insert","lines":["attribute "]},{"start":{"row":59,"column":67},"end":{"row":59,"column":88},"action":"remove","lines":[" instead of id=userID"]},{"start":{"row":60,"column":43},"end":{"row":60,"column":53},"action":"insert","lines":["attribute "]},{"start":{"row":60,"column":67},"end":{"row":60,"column":87},"action":"remove","lines":[" instead of id=email"]},{"start":{"row":91,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["                var objKeys = Object.keys(options);","                ",""]},{"start":{"row":94,"column":19},"end":{"row":94,"column":20},"action":"remove","lines":[" "]},{"start":{"row":94,"column":24},"end":{"row":94,"column":44},"action":"remove","lines":["optKey in options) {"]},{"start":{"row":94,"column":24},"end":{"row":95,"column":20},"action":"insert","lines":["i=0; i<objKeys.length; i++){","                    "]},{"start":{"row":96,"column":53},"end":{"row":96,"column":92},"action":"insert","lines":["and ensures that there is both of them "]},{"start":{"row":97,"column":22},"end":{"row":97,"column":23},"action":"remove","lines":[" "]},{"start":{"row":97,"column":24},"end":{"row":97,"column":26},"action":"remove","lines":["pt"]},{"start":{"row":97,"column":24},"end":{"row":97,"column":26},"action":"insert","lines":["bj"]},{"start":{"row":97,"column":29},"end":{"row":97,"column":33},"action":"insert","lines":["s[0]"]},{"start":{"row":97,"column":38},"end":{"row":97,"column":39},"action":"remove","lines":["\""]},{"start":{"row":97,"column":38},"end":{"row":97,"column":39},"action":"insert","lines":["'"]},{"start":{"row":97,"column":48},"end":{"row":97,"column":59},"action":"remove","lines":["\" || optKey"]},{"start":{"row":97,"column":48},"end":{"row":97,"column":63},"action":"insert","lines":["' && objKeys[1]"]},{"start":{"row":97,"column":68},"end":{"row":97,"column":69},"action":"remove","lines":["\""]},{"start":{"row":97,"column":68},"end":{"row":97,"column":69},"action":"insert","lines":["'"]},{"start":{"row":97,"column":77},"end":{"row":97,"column":80},"action":"remove","lines":["\") "]},{"start":{"row":97,"column":77},"end":{"row":97,"column":79},"action":"insert","lines":["')"]},{"start":{"row":98,"column":37},"end":{"row":98,"column":50},"action":"remove","lines":["ptions[optKey"]},{"start":{"row":98,"column":37},"end":{"row":98,"column":80},"action":"insert","lines":["bjKeys[0] != \"string\") && (typeof objKeys[1"]},{"start":{"row":98,"column":85},"end":{"row":98,"column":86},"action":"remove","lines":["\""]},{"start":{"row":98,"column":85},"end":{"row":98,"column":86},"action":"insert","lines":["'"]},{"start":{"row":98,"column":92},"end":{"row":98,"column":93},"action":"remove","lines":["\""]},{"start":{"row":98,"column":92},"end":{"row":98,"column":93},"action":"insert","lines":["'"]},{"start":{"row":99,"column":45},"end":{"row":99,"column":66},"action":"remove","lines":["Invalid Object format"]},{"start":{"row":99,"column":45},"end":{"row":99,"column":102},"action":"insert","lines":["Please provide the correct format for first and last name"]},{"start":{"row":102,"column":0},"end":{"row":102,"column":20},"action":"insert","lines":["                    "]},{"start":{"row":104,"column":27},"end":{"row":104,"column":35},"action":"remove","lines":[" (optKey"]},{"start":{"row":104,"column":27},"end":{"row":109,"column":39},"action":"insert","lines":["(objKeys[0] === 'firstName' && objKeys[1] != 'lastName'){","                        throw new Error(\"Please provide a last name!\");","                    }","                    ","                    /* Validates the user id */","                    else if (objKeys[i]"]},{"start":{"row":115,"column":30},"end":{"row":115,"column":32},"action":"remove","lines":["pt"]},{"start":{"row":115,"column":30},"end":{"row":115,"column":32},"action":"insert","lines":["bj"]},{"start":{"row":115,"column":35},"end":{"row":115,"column":39},"action":"insert","lines":["s[i]"]},{"start":{"row":116,"column":57},"end":{"row":116,"column":63},"action":"remove","lines":["optKey"]},{"start":{"row":116,"column":57},"end":{"row":116,"column":64},"action":"insert","lines":["'email'"]},{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["                    ",""]},{"start":{"row":129,"column":10},"end":{"row":130,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":130,"column":39},"end":{"row":136,"column":6},"action":"insert","lines":[".","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","      "]},{"start":{"row":144,"column":10},"end":{"row":146,"column":9},"action":"insert","lines":["*","        * @function","        *"]},{"start":{"row":146,"column":74},"end":{"row":147,"column":7},"action":"insert","lines":[". ","       "]},{"start":{"row":166,"column":20},"end":{"row":166,"column":61},"action":"remove","lines":["priv.fillStudentObj(input[0], \"\", \"\", \"\")"]},{"start":{"row":166,"column":20},"end":{"row":167,"column":26},"action":"insert","lines":["console.error(\"Please enter a first and last name!\");","                    return"]},{"start":{"row":172,"column":10},"end":{"row":174,"column":9},"action":"insert","lines":["*","        * @function ","        *"]},{"start":{"row":174,"column":33},"end":{"row":174,"column":34},"action":"remove","lines":["s"]},{"start":{"row":174,"column":66},"end":{"row":175,"column":7},"action":"insert","lines":[".","       "]},{"start":{"row":193,"column":113},"end":{"row":193,"column":117},"action":"remove","lines":["over"]},{"start":{"row":193,"column":113},"end":{"row":193,"column":128},"action":"insert","lines":["in post request"]},{"start":{"row":207,"column":10},"end":{"row":208,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":208,"column":66},"end":{"row":211,"column":7},"action":"insert","lines":[".","        * @function","        * @param {array} arr - The array of strings that make up the response from the POST request???.","       "]},{"start":{"row":224,"column":10},"end":{"row":225,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":225,"column":35},"end":{"row":228,"column":7},"action":"insert","lines":[".","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","       "]},{"start":{"row":232,"column":13},"end":{"row":233,"column":11},"action":"remove","lines":["","           "]},{"start":{"row":237,"column":10},"end":{"row":238,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":238,"column":53},"end":{"row":238,"column":57},"action":"remove","lines":["html"]},{"start":{"row":238,"column":53},"end":{"row":238,"column":57},"action":"insert","lines":["HTML"]},{"start":{"row":238,"column":102},"end":{"row":240,"column":7},"action":"insert","lines":[".","        * @function","       "]},{"start":{"row":242,"column":17},"end":{"row":242,"column":31},"action":"insert","lines":["directoryPage."]},{"start":{"row":243,"column":34},"end":{"row":243,"column":48},"action":"insert","lines":["directoryPage."]},{"start":{"row":244,"column":34},"end":{"row":244,"column":48},"action":"insert","lines":["directoryPage."]},{"start":{"row":247,"column":10},"end":{"row":248,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":248,"column":22},"end":{"row":248,"column":26},"action":"remove","lines":["html"]},{"start":{"row":248,"column":22},"end":{"row":248,"column":26},"action":"insert","lines":["HTML"]},{"start":{"row":248,"column":60},"end":{"row":251,"column":7},"action":"insert","lines":[".","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","       "]},{"start":{"row":253,"column":17},"end":{"row":253,"column":31},"action":"insert","lines":["directoryPage."]},{"start":{"row":253,"column":47},"end":{"row":253,"column":61},"action":"insert","lines":["directoryPage."]},{"start":{"row":253,"column":80},"end":{"row":262,"column":13},"action":"insert","lines":["s the student data and description array","            priv.forms = [];","            var tables = $(priv.selectors.TABLES);","            priv.studs = [];","            tables.each(function(key){","                var table = $(this).text();","                priv.studs.push(table);","                // console.log(table);","            });","             "]},{"start":{"row":264,"column":21},"end":{"row":264,"column":35},"action":"insert","lines":["directoryPage."]},{"start":{"row":268,"column":22},"end":{"row":268,"column":36},"action":"insert","lines":["irectoryPage.d"]},{"start":{"row":270,"column":0},"end":{"row":271,"column":0},"action":"remove","lines":["",""]},{"start":{"row":272,"column":10},"end":{"row":273,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":273,"column":79},"end":{"row":275,"column":7},"action":"insert","lines":[".","        * @function","       "]},{"start":{"row":278,"column":37},"end":{"row":278,"column":51},"action":"insert","lines":["directoryPage."]},{"start":{"row":279,"column":36},"end":{"row":279,"column":50},"action":"insert","lines":["directoryPage."]},{"start":{"row":280,"column":46},"end":{"row":280,"column":60},"action":"insert","lines":["directoryPage."]},{"start":{"row":283,"column":0},"end":{"row":283,"column":8},"action":"insert","lines":["        "]},{"start":{"row":284,"column":10},"end":{"row":285,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":285,"column":71},"end":{"row":288,"column":7},"action":"insert","lines":[".","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","       "]},{"start":{"row":295,"column":10},"end":{"row":296,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":296,"column":47},"end":{"row":296,"column":56},"action":"remove","lines":["html page"]},{"start":{"row":296,"column":47},"end":{"row":299,"column":7},"action":"insert","lines":["HTML page.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","       "]},{"start":{"row":301,"column":37},"end":{"row":301,"column":41},"action":"remove","lines":["html"]},{"start":{"row":301,"column":37},"end":{"row":301,"column":41},"action":"insert","lines":["HTML"]},{"start":{"row":309,"column":35},"end":{"row":309,"column":74},"action":"remove","lines":["console.error(\"Student was not found!\")"]},{"start":{"row":309,"column":35},"end":{"row":309,"column":54},"action":"insert","lines":["priv.Student = null"]},{"start":{"row":314,"column":10},"end":{"row":315,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":315,"column":31},"end":{"row":315,"column":35},"action":"remove","lines":["html"]},{"start":{"row":315,"column":31},"end":{"row":315,"column":35},"action":"insert","lines":["HTML"]},{"start":{"row":315,"column":73},"end":{"row":318,"column":7},"action":"insert","lines":[".","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","       "]},{"start":{"row":323,"column":10},"end":{"row":324,"column":9},"action":"insert","lines":["*","        *"]},{"start":{"row":324,"column":74},"end":{"row":329,"column":7},"action":"insert","lines":[".","        * @function","        * @param {boolean} err - Whether or not an error ocurred.","        * @param {string} res - The respone object.","        * @param {object} html - the body of the request.","       "]},{"start":{"row":340,"column":6},"end":{"row":341,"column":5},"action":"insert","lines":["*","    *"]},{"start":{"row":341,"column":59},"end":{"row":345,"column":3},"action":"insert","lines":[".","    * @function","    * @param {String or Object} input - input that is queried in the penn state directory.","    * @param {function} callbackOne - First callback function.","   "]},{"start":{"row":363,"column":0},"end":{"row":364,"column":0},"action":"insert","lines":["",""]},{"start":{"row":365,"column":25},"end":{"row":366,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":31,"column":7},"action":"remove","lines":["<<<<<<< HEAD","            priv.desc = [], // description elements from the directory page","            priv.data = []; // data elements from the directory page\\","        priv.form = {}, // form","","            /* Selectors used for searching HTML */","            priv.selectors = {","                MATCHES: \"b\", // the number of MATCHES for each student","                DESC: \"th\", // the descriptions of the student such as name, email, etc","                DATA: \"td\" // the data for the descriptions","            };","======="],"id":905}],[{"start":{"row":19,"column":38},"end":{"row":20,"column":0},"action":"remove","lines":["",""],"id":906}],[{"start":{"row":33,"column":0},"end":{"row":33,"column":48},"action":"remove","lines":[">>>>>>> b7f92804f06a55ccb44d9529d3bfda45d94bbc15"],"id":907}],[{"start":{"row":32,"column":10},"end":{"row":33,"column":0},"action":"remove","lines":["",""],"id":908}],[{"start":{"row":1,"column":1},"end":{"row":1,"column":2},"action":"insert","lines":[" "],"id":909},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":[" "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":[" "]},{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":[" "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":[" "]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":[" "]},{"start":{"row":7,"column":4},"end":{"row":7,"column":5},"action":"insert","lines":[" "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"insert","lines":[" "]},{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":[" "]},{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":[" "]},{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":[" "]},{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":[" "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":[" "]},{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":[" "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":1},"action":"insert","lines":[" "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"insert","lines":[" "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":[" "]},{"start":{"row":20,"column":12},"end":{"row":20,"column":13},"action":"insert","lines":[" "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":[" "]},{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":[" "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"insert","lines":[" "]},{"start":{"row":26,"column":8},"end":{"row":26,"column":9},"action":"insert","lines":[" "]},{"start":{"row":27,"column":8},"end":{"row":27,"column":9},"action":"insert","lines":[" "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":1},"action":"insert","lines":[" "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":[" "]},{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":[" "]},{"start":{"row":31,"column":12},"end":{"row":31,"column":13},"action":"insert","lines":[" "]},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":[" "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":1},"action":"insert","lines":[" "]},{"start":{"row":35,"column":8},"end":{"row":35,"column":10},"action":"insert","lines":["  "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":2},"action":"insert","lines":["  "]},{"start":{"row":37,"column":8},"end":{"row":37,"column":10},"action":"insert","lines":["  "]},{"start":{"row":38,"column":0},"end":{"row":38,"column":2},"action":"insert","lines":["  "]},{"start":{"row":39,"column":8},"end":{"row":39,"column":10},"action":"insert","lines":["  "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["  "]},{"start":{"row":41,"column":8},"end":{"row":41,"column":10},"action":"insert","lines":["  "]},{"start":{"row":42,"column":0},"end":{"row":42,"column":1},"action":"insert","lines":[" "]},{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"insert","lines":[" "]},{"start":{"row":44,"column":16},"end":{"row":44,"column":17},"action":"insert","lines":[" "]},{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":[" "]},{"start":{"row":46,"column":0},"end":{"row":46,"column":1},"action":"insert","lines":[" "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":1},"action":"insert","lines":[" "]},{"start":{"row":48,"column":12},"end":{"row":48,"column":13},"action":"insert","lines":[" "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":1},"action":"insert","lines":[" "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":1},"action":"insert","lines":[" "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":1},"action":"insert","lines":[" "]},{"start":{"row":53,"column":12},"end":{"row":53,"column":13},"action":"insert","lines":[" "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":1},"action":"insert","lines":[" "]},{"start":{"row":55,"column":16},"end":{"row":55,"column":17},"action":"insert","lines":[" "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":1},"action":"insert","lines":[" "]},{"start":{"row":58,"column":12},"end":{"row":58,"column":13},"action":"insert","lines":[" "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":1},"action":"insert","lines":[" "]},{"start":{"row":60,"column":16},"end":{"row":60,"column":17},"action":"insert","lines":[" "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":1},"action":"insert","lines":[" "]},{"start":{"row":63,"column":12},"end":{"row":63,"column":13},"action":"insert","lines":[" "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":1},"action":"insert","lines":[" "]},{"start":{"row":65,"column":12},"end":{"row":65,"column":13},"action":"insert","lines":[" "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":[" "]},{"start":{"row":67,"column":16},"end":{"row":67,"column":17},"action":"insert","lines":[" "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "]},{"start":{"row":69,"column":16},"end":{"row":69,"column":17},"action":"insert","lines":[" "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":1},"action":"insert","lines":[" "]},{"start":{"row":71,"column":20},"end":{"row":71,"column":21},"action":"insert","lines":[" "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":1},"action":"insert","lines":[" "]},{"start":{"row":73,"column":16},"end":{"row":73,"column":17},"action":"insert","lines":[" "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":1},"action":"insert","lines":[" "]},{"start":{"row":76,"column":12},"end":{"row":76,"column":13},"action":"insert","lines":[" "]},{"start":{"row":77,"column":0},"end":{"row":77,"column":1},"action":"insert","lines":[" "]},{"start":{"row":78,"column":16},"end":{"row":78,"column":17},"action":"insert","lines":[" "]},{"start":{"row":79,"column":0},"end":{"row":79,"column":15},"action":"remove","lines":["               "]},{"start":{"row":79,"column":0},"end":{"row":80,"column":0},"action":"insert","lines":["",""]},{"start":{"row":80,"column":1},"end":{"row":81,"column":0},"action":"remove","lines":["",""]},{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"insert","lines":[" "]},{"start":{"row":81,"column":20},"end":{"row":81,"column":21},"action":"insert","lines":[" "]},{"start":{"row":81,"column":27},"end":{"row":81,"column":28},"action":"insert","lines":[" "]},{"start":{"row":81,"column":29},"end":{"row":81,"column":30},"action":"insert","lines":[" "]},{"start":{"row":81,"column":34},"end":{"row":81,"column":35},"action":"insert","lines":[" "]},{"start":{"row":81,"column":36},"end":{"row":81,"column":37},"action":"insert","lines":[" "]},{"start":{"row":81,"column":57},"end":{"row":81,"column":58},"action":"insert","lines":[" "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":20},"action":"remove","lines":["                    "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":1},"action":"insert","lines":[" "]},{"start":{"row":84,"column":20},"end":{"row":84,"column":21},"action":"insert","lines":[" "]},{"start":{"row":84,"column":23},"end":{"row":84,"column":24},"action":"insert","lines":[" "]},{"start":{"row":84,"column":81},"end":{"row":84,"column":82},"action":"insert","lines":[" "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":1},"action":"insert","lines":[" "]},{"start":{"row":86,"column":28},"end":{"row":86,"column":29},"action":"insert","lines":[" "]},{"start":{"row":87,"column":24},"end":{"row":87,"column":25},"action":"insert","lines":[" "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":1},"action":"insert","lines":[" "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":9},"action":"remove","lines":["         "]},{"start":{"row":89,"column":0},"end":{"row":90,"column":0},"action":"insert","lines":["",""]},{"start":{"row":90,"column":4},"end":{"row":91,"column":0},"action":"remove","lines":["       ",""]},{"start":{"row":90,"column":21},"end":{"row":90,"column":24},"action":"remove","lines":["   "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":1},"action":"insert","lines":[" "]},{"start":{"row":91,"column":28},"end":{"row":91,"column":29},"action":"insert","lines":[" "]},{"start":{"row":91,"column":85},"end":{"row":91,"column":86},"action":"insert","lines":[" "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":1},"action":"insert","lines":[" "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":1},"action":"insert","lines":[" "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":6},"action":"remove","lines":["      "]},{"start":{"row":94,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["",""]},{"start":{"row":95,"column":14},"end":{"row":96,"column":13},"action":"remove","lines":["","             "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":1},"action":"insert","lines":[" "]},{"start":{"row":97,"column":24},"end":{"row":97,"column":25},"action":"insert","lines":[" "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"insert","lines":[" "]},{"start":{"row":99,"column":20},"end":{"row":99,"column":21},"action":"insert","lines":[" "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":1},"action":"insert","lines":[" "]},{"start":{"row":102,"column":20},"end":{"row":102,"column":21},"action":"insert","lines":[" "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":1},"action":"insert","lines":[" "]},{"start":{"row":104,"column":28},"end":{"row":104,"column":29},"action":"insert","lines":[" "]},{"start":{"row":105,"column":24},"end":{"row":105,"column":25},"action":"insert","lines":[" "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":1},"action":"insert","lines":[" "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":7},"action":"remove","lines":["       "]},{"start":{"row":107,"column":0},"end":{"row":108,"column":0},"action":"insert","lines":["",""]},{"start":{"row":108,"column":13},"end":{"row":109,"column":12},"action":"remove","lines":["","            "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":1},"action":"insert","lines":[" "]},{"start":{"row":110,"column":20},"end":{"row":110,"column":21},"action":"insert","lines":[" "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":1},"action":"insert","lines":[" "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":1},"action":"insert","lines":[" "]},{"start":{"row":113,"column":12},"end":{"row":113,"column":13},"action":"insert","lines":[" "]},{"start":{"row":114,"column":0},"end":{"row":114,"column":1},"action":"insert","lines":[" "]},{"start":{"row":116,"column":8},"end":{"row":116,"column":9},"action":"insert","lines":[" "]},{"start":{"row":117,"column":0},"end":{"row":117,"column":2},"action":"insert","lines":["  "]},{"start":{"row":118,"column":8},"end":{"row":118,"column":10},"action":"insert","lines":["  "]},{"start":{"row":119,"column":0},"end":{"row":119,"column":1},"action":"insert","lines":[" "]},{"start":{"row":119,"column":9},"end":{"row":119,"column":10},"action":"insert","lines":[" "]},{"start":{"row":120,"column":8},"end":{"row":120,"column":10},"action":"insert","lines":["  "]},{"start":{"row":121,"column":0},"end":{"row":121,"column":1},"action":"insert","lines":[" "]},{"start":{"row":121,"column":9},"end":{"row":121,"column":10},"action":"insert","lines":[" "]},{"start":{"row":122,"column":8},"end":{"row":122,"column":10},"action":"insert","lines":["  "]},{"start":{"row":123,"column":0},"end":{"row":123,"column":1},"action":"insert","lines":[" "]},{"start":{"row":123,"column":9},"end":{"row":123,"column":10},"action":"insert","lines":[" "]},{"start":{"row":124,"column":0},"end":{"row":124,"column":1},"action":"insert","lines":[" "]},{"start":{"row":125,"column":12},"end":{"row":125,"column":13},"action":"insert","lines":[" "]},{"start":{"row":126,"column":0},"end":{"row":126,"column":1},"action":"insert","lines":[" "]},{"start":{"row":127,"column":12},"end":{"row":127,"column":13},"action":"insert","lines":[" "]},{"start":{"row":128,"column":0},"end":{"row":128,"column":1},"action":"insert","lines":[" "]},{"start":{"row":129,"column":8},"end":{"row":129,"column":9},"action":"insert","lines":[" "]},{"start":{"row":131,"column":0},"end":{"row":131,"column":1},"action":"insert","lines":[" "]},{"start":{"row":132,"column":8},"end":{"row":132,"column":10},"action":"insert","lines":["  "]},{"start":{"row":133,"column":0},"end":{"row":133,"column":2},"action":"insert","lines":["  "]},{"start":{"row":134,"column":8},"end":{"row":134,"column":10},"action":"insert","lines":["  "]},{"start":{"row":135,"column":0},"end":{"row":135,"column":1},"action":"insert","lines":[" "]},{"start":{"row":136,"column":0},"end":{"row":136,"column":1},"action":"insert","lines":[" "]},{"start":{"row":137,"column":12},"end":{"row":137,"column":13},"action":"insert","lines":[" "]},{"start":{"row":138,"column":0},"end":{"row":138,"column":1},"action":"insert","lines":[" "]},{"start":{"row":139,"column":12},"end":{"row":139,"column":13},"action":"insert","lines":[" "]},{"start":{"row":141,"column":0},"end":{"row":141,"column":1},"action":"insert","lines":[" "]},{"start":{"row":142,"column":12},"end":{"row":142,"column":13},"action":"insert","lines":[" "]},{"start":{"row":143,"column":0},"end":{"row":143,"column":1},"action":"insert","lines":[" "]},{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"insert","lines":[" "]},{"start":{"row":146,"column":0},"end":{"row":146,"column":1},"action":"insert","lines":[" "]},{"start":{"row":147,"column":12},"end":{"row":147,"column":13},"action":"insert","lines":[" "]},{"start":{"row":148,"column":0},"end":{"row":148,"column":1},"action":"insert","lines":[" "]},{"start":{"row":149,"column":16},"end":{"row":149,"column":17},"action":"insert","lines":[" "]},{"start":{"row":150,"column":0},"end":{"row":150,"column":1},"action":"insert","lines":[" "]},{"start":{"row":151,"column":16},"end":{"row":151,"column":17},"action":"insert","lines":[" "]},{"start":{"row":152,"column":0},"end":{"row":152,"column":1},"action":"insert","lines":[" "]},{"start":{"row":153,"column":0},"end":{"row":153,"column":1},"action":"insert","lines":[" "]},{"start":{"row":154,"column":0},"end":{"row":154,"column":1},"action":"insert","lines":[" "]},{"start":{"row":155,"column":16},"end":{"row":155,"column":17},"action":"insert","lines":[" "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":1},"action":"insert","lines":[" "]},{"start":{"row":157,"column":0},"end":{"row":157,"column":1},"action":"insert","lines":[" "]},{"start":{"row":159,"column":8},"end":{"row":159,"column":9},"action":"insert","lines":[" "]},{"start":{"row":160,"column":0},"end":{"row":160,"column":1},"action":"insert","lines":[" "]},{"start":{"row":160,"column":9},"end":{"row":160,"column":10},"action":"insert","lines":[" "]},{"start":{"row":161,"column":0},"end":{"row":161,"column":2},"action":"insert","lines":["  "]},{"start":{"row":162,"column":0},"end":{"row":162,"column":1},"action":"insert","lines":[" "]},{"start":{"row":162,"column":9},"end":{"row":162,"column":10},"action":"insert","lines":[" "]},{"start":{"row":163,"column":0},"end":{"row":163,"column":1},"action":"insert","lines":[" "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":1},"action":"insert","lines":[" "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":1},"action":"insert","lines":[" "]},{"start":{"row":166,"column":16},"end":{"row":166,"column":17},"action":"insert","lines":[" "]},{"start":{"row":167,"column":0},"end":{"row":167,"column":1},"action":"insert","lines":[" "]},{"start":{"row":168,"column":16},"end":{"row":168,"column":17},"action":"insert","lines":[" "]},{"start":{"row":169,"column":0},"end":{"row":169,"column":1},"action":"insert","lines":[" "]},{"start":{"row":171,"column":12},"end":{"row":171,"column":13},"action":"insert","lines":[" "]},{"start":{"row":172,"column":0},"end":{"row":172,"column":1},"action":"insert","lines":[" "]},{"start":{"row":173,"column":16},"end":{"row":173,"column":17},"action":"insert","lines":[" "]},{"start":{"row":174,"column":0},"end":{"row":174,"column":1},"action":"insert","lines":[" "]},{"start":{"row":175,"column":8},"end":{"row":175,"column":9},"action":"insert","lines":[" "]},{"start":{"row":177,"column":0},"end":{"row":177,"column":1},"action":"insert","lines":[" "]},{"start":{"row":178,"column":0},"end":{"row":178,"column":1},"action":"insert","lines":[" "]},{"start":{"row":179,"column":0},"end":{"row":179,"column":1},"action":"insert","lines":[" "]},{"start":{"row":180,"column":8},"end":{"row":180,"column":9},"action":"insert","lines":[" "]},{"start":{"row":181,"column":0},"end":{"row":181,"column":1},"action":"insert","lines":[" "]},{"start":{"row":183,"column":8},"end":{"row":183,"column":9},"action":"insert","lines":[" "]},{"start":{"row":184,"column":0},"end":{"row":184,"column":1},"action":"insert","lines":[" "]},{"start":{"row":185,"column":12},"end":{"row":185,"column":13},"action":"insert","lines":[" "]},{"start":{"row":186,"column":0},"end":{"row":186,"column":1},"action":"insert","lines":[" "]},{"start":{"row":187,"column":16},"end":{"row":187,"column":17},"action":"insert","lines":[" "]},{"start":{"row":188,"column":0},"end":{"row":188,"column":1},"action":"insert","lines":[" "]},{"start":{"row":189,"column":12},"end":{"row":189,"column":13},"action":"insert","lines":[" "]},{"start":{"row":190,"column":0},"end":{"row":190,"column":1},"action":"insert","lines":[" "]},{"start":{"row":191,"column":12},"end":{"row":191,"column":13},"action":"insert","lines":[" "]},{"start":{"row":192,"column":0},"end":{"row":192,"column":1},"action":"insert","lines":[" "]},{"start":{"row":194,"column":8},"end":{"row":194,"column":9},"action":"insert","lines":[" "]},{"start":{"row":195,"column":0},"end":{"row":195,"column":2},"action":"insert","lines":["  "]},{"start":{"row":196,"column":0},"end":{"row":196,"column":1},"action":"insert","lines":[" "]},{"start":{"row":196,"column":9},"end":{"row":196,"column":10},"action":"insert","lines":[" "]},{"start":{"row":197,"column":0},"end":{"row":197,"column":2},"action":"insert","lines":["  "]},{"start":{"row":198,"column":8},"end":{"row":198,"column":10},"action":"insert","lines":["  "]},{"start":{"row":199,"column":0},"end":{"row":199,"column":1},"action":"insert","lines":[" "]},{"start":{"row":200,"column":12},"end":{"row":200,"column":13},"action":"insert","lines":[" "]},{"start":{"row":201,"column":0},"end":{"row":201,"column":1},"action":"insert","lines":[" "]},{"start":{"row":202,"column":16},"end":{"row":202,"column":17},"action":"insert","lines":[" "]},{"start":{"row":204,"column":0},"end":{"row":204,"column":1},"action":"insert","lines":[" "]},{"start":{"row":205,"column":16},"end":{"row":205,"column":17},"action":"insert","lines":[" "]},{"start":{"row":206,"column":0},"end":{"row":206,"column":1},"action":"insert","lines":[" "]},{"start":{"row":207,"column":16},"end":{"row":207,"column":17},"action":"insert","lines":[" "]},{"start":{"row":208,"column":0},"end":{"row":208,"column":1},"action":"insert","lines":[" "]},{"start":{"row":209,"column":8},"end":{"row":209,"column":9},"action":"insert","lines":[" "]},{"start":{"row":211,"column":0},"end":{"row":211,"column":1},"action":"insert","lines":[" "]},{"start":{"row":212,"column":8},"end":{"row":212,"column":10},"action":"insert","lines":["  "]},{"start":{"row":213,"column":8},"end":{"row":213,"column":10},"action":"insert","lines":["  "]},{"start":{"row":214,"column":0},"end":{"row":214,"column":2},"action":"insert","lines":["  "]},{"start":{"row":215,"column":0},"end":{"row":215,"column":2},"action":"insert","lines":["  "]},{"start":{"row":216,"column":8},"end":{"row":216,"column":9},"action":"insert","lines":[" "]},{"start":{"row":217,"column":0},"end":{"row":217,"column":1},"action":"insert","lines":[" "]},{"start":{"row":218,"column":16},"end":{"row":218,"column":17},"action":"insert","lines":[" "]},{"start":{"row":219,"column":12},"end":{"row":219,"column":13},"action":"insert","lines":[" "]},{"start":{"row":219,"column":14},"end":{"row":220,"column":12},"action":"insert","lines":["","            "]},{"start":{"row":221,"column":0},"end":{"row":221,"column":1},"action":"insert","lines":[" "]},{"start":{"row":222,"column":12},"end":{"row":222,"column":13},"action":"insert","lines":[" "]},{"start":{"row":223,"column":0},"end":{"row":223,"column":1},"action":"insert","lines":[" "]},{"start":{"row":225,"column":8},"end":{"row":225,"column":9},"action":"insert","lines":[" "]},{"start":{"row":226,"column":0},"end":{"row":226,"column":2},"action":"insert","lines":["  "]},{"start":{"row":227,"column":0},"end":{"row":227,"column":1},"action":"insert","lines":[" "]},{"start":{"row":227,"column":9},"end":{"row":227,"column":10},"action":"insert","lines":[" "]},{"start":{"row":228,"column":8},"end":{"row":228,"column":10},"action":"insert","lines":["  "]},{"start":{"row":229,"column":0},"end":{"row":229,"column":1},"action":"insert","lines":[" "]},{"start":{"row":230,"column":12},"end":{"row":230,"column":13},"action":"insert","lines":[" "]},{"start":{"row":231,"column":0},"end":{"row":231,"column":1},"action":"insert","lines":[" "]},{"start":{"row":232,"column":12},"end":{"row":232,"column":13},"action":"insert","lines":[" "]},{"start":{"row":233,"column":0},"end":{"row":233,"column":1},"action":"insert","lines":[" "]},{"start":{"row":235,"column":8},"end":{"row":235,"column":9},"action":"insert","lines":[" "]},{"start":{"row":236,"column":0},"end":{"row":236,"column":2},"action":"insert","lines":["  "]},{"start":{"row":237,"column":0},"end":{"row":237,"column":1},"action":"insert","lines":[" "]},{"start":{"row":237,"column":9},"end":{"row":237,"column":10},"action":"insert","lines":[" "]},{"start":{"row":238,"column":0},"end":{"row":238,"column":2},"action":"insert","lines":["  "]},{"start":{"row":239,"column":0},"end":{"row":239,"column":1},"action":"insert","lines":[" "]},{"start":{"row":239,"column":9},"end":{"row":239,"column":10},"action":"insert","lines":[" "]},{"start":{"row":240,"column":0},"end":{"row":240,"column":1},"action":"insert","lines":[" "]},{"start":{"row":241,"column":0},"end":{"row":241,"column":1},"action":"insert","lines":[" "]},{"start":{"row":242,"column":0},"end":{"row":242,"column":1},"action":"insert","lines":[" "]},{"start":{"row":243,"column":12},"end":{"row":243,"column":13},"action":"insert","lines":[" "]},{"start":{"row":244,"column":0},"end":{"row":244,"column":1},"action":"insert","lines":[" "]},{"start":{"row":245,"column":12},"end":{"row":245,"column":13},"action":"insert","lines":[" "]},{"start":{"row":245,"column":38},"end":{"row":245,"column":39},"action":"insert","lines":[" "]},{"start":{"row":246,"column":16},"end":{"row":246,"column":17},"action":"insert","lines":[" "]},{"start":{"row":247,"column":0},"end":{"row":247,"column":1},"action":"insert","lines":[" "]},{"start":{"row":248,"column":16},"end":{"row":248,"column":17},"action":"insert","lines":[" "]},{"start":{"row":249,"column":0},"end":{"row":249,"column":1},"action":"insert","lines":[" "]},{"start":{"row":250,"column":0},"end":{"row":250,"column":13},"action":"remove","lines":["             "]},{"start":{"row":251,"column":0},"end":{"row":251,"column":1},"action":"insert","lines":[" "]},{"start":{"row":252,"column":0},"end":{"row":252,"column":1},"action":"insert","lines":[" "]},{"start":{"row":253,"column":12},"end":{"row":253,"column":13},"action":"insert","lines":[" "]},{"start":{"row":255,"column":0},"end":{"row":255,"column":1},"action":"insert","lines":[" "]},{"start":{"row":256,"column":16},"end":{"row":256,"column":17},"action":"insert","lines":[" "]},{"start":{"row":257,"column":12},"end":{"row":257,"column":13},"action":"insert","lines":[" "]},{"start":{"row":258,"column":0},"end":{"row":258,"column":1},"action":"insert","lines":[" "]},{"start":{"row":260,"column":0},"end":{"row":260,"column":1},"action":"insert","lines":[" "]},{"start":{"row":261,"column":8},"end":{"row":261,"column":10},"action":"insert","lines":["  "]},{"start":{"row":262,"column":8},"end":{"row":262,"column":10},"action":"insert","lines":["  "]},{"start":{"row":263,"column":8},"end":{"row":263,"column":10},"action":"insert","lines":["  "]},{"start":{"row":264,"column":0},"end":{"row":264,"column":1},"action":"insert","lines":[" "]},{"start":{"row":265,"column":0},"end":{"row":265,"column":1},"action":"insert","lines":[" "]},{"start":{"row":266,"column":12},"end":{"row":266,"column":13},"action":"insert","lines":[" "]},{"start":{"row":267,"column":0},"end":{"row":267,"column":1},"action":"insert","lines":[" "]},{"start":{"row":268,"column":16},"end":{"row":268,"column":17},"action":"insert","lines":[" "]},{"start":{"row":269,"column":0},"end":{"row":269,"column":1},"action":"insert","lines":[" "]},{"start":{"row":270,"column":8},"end":{"row":270,"column":9},"action":"insert","lines":[" "]},{"start":{"row":271,"column":0},"end":{"row":271,"column":7},"action":"remove","lines":["       "]},{"start":{"row":271,"column":0},"end":{"row":272,"column":0},"action":"insert","lines":["",""]},{"start":{"row":272,"column":1},"end":{"row":273,"column":0},"action":"remove","lines":["",""]},{"start":{"row":273,"column":0},"end":{"row":273,"column":2},"action":"insert","lines":["  "]},{"start":{"row":274,"column":8},"end":{"row":274,"column":10},"action":"insert","lines":["  "]},{"start":{"row":275,"column":0},"end":{"row":275,"column":2},"action":"insert","lines":["  "]},{"start":{"row":276,"column":8},"end":{"row":276,"column":10},"action":"insert","lines":["  "]},{"start":{"row":277,"column":0},"end":{"row":277,"column":1},"action":"insert","lines":[" "]},{"start":{"row":278,"column":0},"end":{"row":278,"column":1},"action":"insert","lines":[" "]},{"start":{"row":279,"column":12},"end":{"row":279,"column":13},"action":"insert","lines":[" "]},{"start":{"row":280,"column":0},"end":{"row":280,"column":1},"action":"insert","lines":[" "]},{"start":{"row":281,"column":8},"end":{"row":281,"column":9},"action":"insert","lines":[" "]},{"start":{"row":283,"column":0},"end":{"row":283,"column":1},"action":"insert","lines":[" "]},{"start":{"row":284,"column":8},"end":{"row":284,"column":10},"action":"insert","lines":["  "]},{"start":{"row":285,"column":0},"end":{"row":285,"column":2},"action":"insert","lines":["  "]},{"start":{"row":286,"column":8},"end":{"row":286,"column":10},"action":"insert","lines":["  "]},{"start":{"row":287,"column":0},"end":{"row":287,"column":2},"action":"insert","lines":["  "]},{"start":{"row":288,"column":8},"end":{"row":288,"column":9},"action":"insert","lines":[" "]},{"start":{"row":289,"column":0},"end":{"row":289,"column":1},"action":"insert","lines":[" "]},{"start":{"row":290,"column":12},"end":{"row":290,"column":13},"action":"insert","lines":[" "]},{"start":{"row":292,"column":0},"end":{"row":292,"column":1},"action":"insert","lines":[" "]},{"start":{"row":293,"column":12},"end":{"row":293,"column":13},"action":"insert","lines":[" "]},{"start":{"row":294,"column":0},"end":{"row":294,"column":1},"action":"insert","lines":[" "]},{"start":{"row":295,"column":12},"end":{"row":295,"column":13},"action":"insert","lines":[" "]},{"start":{"row":296,"column":0},"end":{"row":296,"column":1},"action":"insert","lines":[" "]},{"start":{"row":297,"column":16},"end":{"row":297,"column":17},"action":"insert","lines":[" "]},{"start":{"row":298,"column":0},"end":{"row":298,"column":1},"action":"insert","lines":[" "]},{"start":{"row":299,"column":12},"end":{"row":299,"column":13},"action":"insert","lines":[" "]},{"start":{"row":300,"column":0},"end":{"row":300,"column":1},"action":"insert","lines":[" "]},{"start":{"row":302,"column":8},"end":{"row":302,"column":9},"action":"insert","lines":[" "]},{"start":{"row":303,"column":0},"end":{"row":303,"column":2},"action":"insert","lines":["  "]},{"start":{"row":304,"column":0},"end":{"row":304,"column":1},"action":"insert","lines":[" "]},{"start":{"row":304,"column":9},"end":{"row":304,"column":10},"action":"insert","lines":[" "]},{"start":{"row":305,"column":0},"end":{"row":305,"column":2},"action":"insert","lines":["  "]},{"start":{"row":306,"column":0},"end":{"row":306,"column":1},"action":"insert","lines":[" "]},{"start":{"row":306,"column":9},"end":{"row":306,"column":10},"action":"insert","lines":[" "]},{"start":{"row":307,"column":0},"end":{"row":307,"column":1},"action":"insert","lines":[" "]},{"start":{"row":308,"column":12},"end":{"row":308,"column":13},"action":"insert","lines":[" "]},{"start":{"row":309,"column":0},"end":{"row":309,"column":1},"action":"insert","lines":[" "]},{"start":{"row":311,"column":8},"end":{"row":311,"column":9},"action":"insert","lines":[" "]},{"start":{"row":312,"column":0},"end":{"row":312,"column":2},"action":"insert","lines":["  "]},{"start":{"row":313,"column":0},"end":{"row":313,"column":1},"action":"insert","lines":[" "]},{"start":{"row":313,"column":9},"end":{"row":313,"column":10},"action":"insert","lines":[" "]},{"start":{"row":314,"column":0},"end":{"row":314,"column":2},"action":"insert","lines":["  "]},{"start":{"row":315,"column":0},"end":{"row":315,"column":1},"action":"insert","lines":[" "]},{"start":{"row":315,"column":9},"end":{"row":315,"column":10},"action":"insert","lines":[" "]},{"start":{"row":316,"column":0},"end":{"row":316,"column":2},"action":"insert","lines":["  "]},{"start":{"row":317,"column":0},"end":{"row":317,"column":1},"action":"insert","lines":[" "]},{"start":{"row":317,"column":9},"end":{"row":317,"column":10},"action":"insert","lines":[" "]},{"start":{"row":318,"column":0},"end":{"row":318,"column":1},"action":"insert","lines":[" "]},{"start":{"row":319,"column":0},"end":{"row":319,"column":1},"action":"insert","lines":[" "]},{"start":{"row":320,"column":0},"end":{"row":320,"column":1},"action":"insert","lines":[" "]},{"start":{"row":321,"column":12},"end":{"row":321,"column":13},"action":"insert","lines":[" "]},{"start":{"row":322,"column":0},"end":{"row":322,"column":1},"action":"insert","lines":[" "]},{"start":{"row":324,"column":8},"end":{"row":324,"column":9},"action":"insert","lines":[" "]},{"start":{"row":325,"column":0},"end":{"row":325,"column":1},"action":"insert","lines":[" "]},{"start":{"row":326,"column":4},"end":{"row":326,"column":5},"action":"insert","lines":[" "]},{"start":{"row":328,"column":0},"end":{"row":328,"column":1},"action":"insert","lines":[" "]},{"start":{"row":329,"column":0},"end":{"row":329,"column":2},"action":"insert","lines":["  "]},{"start":{"row":330,"column":4},"end":{"row":330,"column":6},"action":"insert","lines":["  "]},{"start":{"row":331,"column":0},"end":{"row":331,"column":2},"action":"insert","lines":["  "]},{"start":{"row":332,"column":4},"end":{"row":332,"column":6},"action":"insert","lines":["  "]},{"start":{"row":333,"column":0},"end":{"row":333,"column":2},"action":"insert","lines":["  "]},{"start":{"row":334,"column":4},"end":{"row":334,"column":5},"action":"insert","lines":[" "]},{"start":{"row":335,"column":0},"end":{"row":335,"column":1},"action":"insert","lines":[" "]},{"start":{"row":336,"column":8},"end":{"row":336,"column":9},"action":"insert","lines":[" "]},{"start":{"row":337,"column":0},"end":{"row":337,"column":1},"action":"insert","lines":[" "]},{"start":{"row":338,"column":12},"end":{"row":338,"column":13},"action":"insert","lines":[" "]},{"start":{"row":339,"column":8},"end":{"row":339,"column":9},"action":"insert","lines":[" "]},{"start":{"row":341,"column":0},"end":{"row":341,"column":1},"action":"insert","lines":[" "]},{"start":{"row":342,"column":0},"end":{"row":342,"column":1},"action":"insert","lines":[" "]},{"start":{"row":343,"column":12},"end":{"row":343,"column":13},"action":"insert","lines":[" "]},{"start":{"row":344,"column":0},"end":{"row":344,"column":1},"action":"insert","lines":[" "]},{"start":{"row":345,"column":12},"end":{"row":345,"column":13},"action":"insert","lines":[" "]},{"start":{"row":346,"column":0},"end":{"row":346,"column":1},"action":"insert","lines":[" "]},{"start":{"row":347,"column":8},"end":{"row":347,"column":9},"action":"insert","lines":[" "]},{"start":{"row":348,"column":0},"end":{"row":348,"column":1},"action":"insert","lines":[" "]},{"start":{"row":349,"column":8},"end":{"row":349,"column":9},"action":"insert","lines":[" "]},{"start":{"row":350,"column":0},"end":{"row":350,"column":1},"action":"insert","lines":[" "]},{"start":{"row":352,"column":4},"end":{"row":352,"column":5},"action":"insert","lines":[" "]},{"start":{"row":353,"column":0},"end":{"row":353,"column":1},"action":"insert","lines":[" "]},{"start":{"row":354,"column":0},"end":{"row":354,"column":1},"action":"insert","lines":[" "]},{"start":{"row":355,"column":0},"end":{"row":355,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":242,"column":0},"end":{"row":249,"column":16},"action":"remove","lines":["             priv.forms = [];","             var tables = $(priv.selectors.TABLES);","             priv.studs = [];","             tables.each(function(key) {","                 var table = $(this).text();","                 priv.studs.push(table);","                 // console.log(table);","             });"],"id":910}],[{"start":{"row":242,"column":0},"end":{"row":243,"column":0},"action":"remove","lines":["",""],"id":911}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":912,"ignore":true},{"start":{"row":348,"column":1},"end":{"row":708,"column":0},"action":"insert","lines":["","======="," *     PENN STATE DIRECTORY API         *"," ****************************************/","(function() {","    /* Imports */","    var request = require('request');","    var querystring = require('querystring');","    var cheerio = require('cheerio');","","    // Polyfill for Object.assign and String.endsWith","    var objectAssign = require('object-assign');","    require('string.prototype.endswith');","","    /* Public object that will contain the public functions that are going to be exported */","    var pub = {};","    /* Private object that  will contain the private functions that will not be exported */","    var priv = {};","","    /**","     * psd-api namespace","     *","     */","    var getStudent = function(options, callbackOne) {","        priv.Student = {}, // student","            priv.form = {}, // form","            priv.directoryPage = {}, // directory page that is returned from the server","            priv.directoryPage.desc = [], // description elements from the directory page","            priv.directoryPage.data = []; // data elements from the directory page","","","        /* Selectors used for searching HTML */","        priv.selectors = {","            TABLES: \"body > div > form > table\", // the selector for all the tables on the page for all the students","            MATCHES: \"b\", // the number of MATCHES for each student","            DESC: \"th\", // the descriptions of the student such as name, email, etc","            DATA: \"td\" // the data for the descriptions","        };","","        /**","        * Generates new query object for the form.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.newQuery = function(firstName, lastName, userID, email) {","            return {","                'cn': firstName,","                'sn': lastName,","                'uid': userID, // name=uid attribute in search page","                'mail': email // name=mail attribute in search page","            };","        };","","        /* Validation object that contains the different validation methods */","        priv.validate = {","            /* Validates the passed in parameter options */","            options: function(str) {","                return /^[a-zA-Z]+$/.test(str);","            },","","            /* Checks if passed in parameter is an email */","            email: function(str) {","                return str.endsWith(\"@psu.edu\");","            },","","            /* Checks if passed in parameter contains a number, which means it is an id */","            /* This validation happens AFTER checking if the string is an email */","            userID: function(str) {","                var isNumber, userID = str.match(/\\d+/g);","                if (userID != null) {","                    isNumber = true;","                }","                else {","                    isNumber = false;","                }","                return isNumber;","            },","","            /* Determines if the option parameter is an object */","            isobjectValid: function() {","                var objKeys = Object.keys(options);","","                /* Checks every value in the options object and Incase the string contains non-alphabet characters */","                for(var i=0; i<objKeys.length; i++){","","                    /* Validates first and last name and ensures that there is both of them */","                    if(objKeys[0] === 'firstName' && objKeys[1] === 'lastName'){","                        if ((typeof objKeys[0] != \"string\") && (typeof objKeys[1] != 'string')) {","                            throw new Error(\"Please provide the correct format for first and last name!\");","                        }","                    }","","                    /* Validates the user id */","                    else if(objKeys[0] === 'firstName' && objKeys[1] != 'lastName'){","                        throw new Error(\"Please provide a last name!\");","                    }","","                    /* Validates the user id */","                    else if (objKeys[i] === \"userID\") {","                        if (priv.validate.userID(options[\"userID\"])) return true;","                        else return false;","                    }","","                    /* Validates the email */","                    else if (objKeys[i] === \"email\") {","                        if ((priv.validate.email(options['email']) === false)) {","                            throw new Error(\"Invalid Object format!\");","                        }","                    }","","                    else {","                        throw new Error(\"Invalid Object format!\");","                    }","                }","                return true;","            }","        };","","        /**","        * Fills the student info object.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.fillStudentObj = function(firstName, lastName, userID, email) {","            priv.Student.firstName = firstName;","            priv.Student.lastName = lastName;","            priv.Student.userID = userID;","            priv.Student.email = email;","        };","","        /**","        * @function","        * Initializes the Student object depending on the passed in string.","        */","        priv.initStrStudent = function() {","            /* Checks if passed in parameter is an email */","            if (priv.validate.email(options)) {","                priv.fillStudentObj(\"\", \"\", \"\", options);","            }","","            /* Checks if passed in parameter is an id */","            else if (priv.validate.userID(options)) {","                priv.fillStudentObj(\"\", \"\", options, \"\");","            }","","            /* Passed in parameter is not an object, email, or id, so it must be a name */","            else {","                var input = options.split(\" \");","                if (input.length === 2) {","                    priv.fillStudentObj(input[0], input[1]);","                }","                else {","                    console.error(\"Please enter a first and last name!\");","                    return;","                }","            }","        };","","        /**","        * @function","        * Initializes the student information passed in as options.","        */","        priv.initStudent = function() {","            /* Checks if the passed in is valid object */","            if (typeof options === \"object\") {","                if (priv.validate.isobjectValid()) {","                    objectAssign(priv.Student, options);","                }","            }","","            /* Checks if the passed in parameter is a string */","            else if (typeof options === \"string\") {","                priv.initStrStudent();","            }","        }();","","        /* Form object that will contain the form data that will be sent in the post request */","        priv.form.data = priv.newQuery(priv.Student.firstName, priv.Student.lastName, priv.Student.userID, priv.Student.email);","        priv.form.stringFormData = querystring.stringify(priv.form.data); /* Contains the stringified data */","        priv.form.contentLength = priv.form.stringFormData.length; /* Contains the size of the data that is sent in post request */","        priv.form.dirLink = 'http://www.work.psu.edu/cgi-bin/ldap/ldap_query.cgi'; /* Penn State Directory link for scraping */","","        /* Request options that contain the appropriate request headers, url, body, and method for sending the post request */","        priv.form.reqOptions = {","            headers: {","                'Content-Length': priv.form.contentLength,","                'Content-Type': 'application/x-www-form-urlencoded'","            },","            url: priv.form.dirLink,","            body: priv.form.stringFormData,","            method: 'POST'","        };","","        /**","        * Removes all line breaks and colons in the data retrieved.","        * @function","        * @param {array} arr - The array of strings that make up the response from the POST request???.","        */","        priv.removeLinBr = function(arr) {","            for (var str in arr) {","                arr[str] = arr[str].trim();","                arr[str] = arr[str].replace(/:/g, '');","","                /* Seperates the emails with commas */","                if (priv.validate.email(arr[str])) {","                    arr[str] = arr[str].replace(/\\n+/g, ', ');","                }","            }","        };","","        /**","        * Finds if there is a match.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.isStudentFound = function($) {","            if ($(priv.selectors.MATCHES).text().indexOf(\"0 matches\", 0) == 0 || options === \"\") {","                return false;","            } else {","                return true;","            }","        };","","        /**","        * Formats the data that is received from the HTML page by removing first entry and line breaks.","        * @function","        */","        priv.formatData = function() {","            priv.directoryPage.desc.shift();","            priv.removeLinBr(priv.directoryPage.desc);","            priv.removeLinBr(priv.directoryPage.data);","        };","","        /**","        * Queries the HTML page for the students information.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.extractData = function($) {","            priv.directoryPage.data = [], priv.directoryPage.desc = []; // resets the student data and description array","            priv.forms = [];","            var tables = $(priv.selectors.TABLES);","            priv.studs = [];","            tables.each(function(key){","                var table = $(this).text();","                priv.studs.push(table);","                // console.log(table);","            });","","            $(priv.selectors.DESC).each(function() {","                priv.directoryPage.desc.push($(this).text());","            });","","            $(priv.selectors.DATA).each(function() {","                priv.directoryPage.data.push($(this).text());","            });","        };","","        /**","        * Initializes the Student object with the correct properties and values.","        * @function","        */","        priv.initStudentData = function() {","            priv.Student = {};","            for (var studKey in priv.directoryPage.data) {","                var studProp = priv.directoryPage.desc[studKey];","                priv.Student[studProp] = priv.directoryPage.data[studKey];","            }","        };","","        /**","        * Queries the student page for the table headers and table data.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.getStudentInfo = function($) {","            priv.extractData($);","            priv.formatData();","            priv.initStudentData();","        };","","        /**","        * Finds the students info on the given HTML page.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.findStudent = function(htmlPage) {","            /* Library used to parse HTML  */","            var $ = cheerio.load(htmlPage);","","            /* Checks if the student is found */","            if (priv.isStudentFound($)) {","                priv.getStudentInfo($);","            }","            else {","                if (options != \"\") priv.Student = null;","                else console.error(\"Please enter a student!\");","            }","        };","","        /**","        * Scrapes the students HTML page that is received from the server.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.scrape = function(htmlPage) {","            priv.findStudent(htmlPage);","        };","","        /**","        * Callback that executes after the student information is returned.","        * @function","        * @param {boolean} err - Whether or not an error ocurred.","        * @param {string} res - The respone object.","        * @param {object} html - the body of the request.","        */","        var callback = function(err, res, html) {","            if (err) throw new Error('Error in retrieving student informaton');","            priv.scrape(res.body);","            callbackOne(priv.Student);","        };","","        /* Sends the request */","        request(priv.form.reqOptions, callback);","    };","","    /**","    * Allows you to pass in array of students for searching.","    * @function","    * @param {String or Object} input - input that is queried in the penn state directory.","    * @param {function} callbackOne - First callback function.","    */","    pub.get = function(input, callbackOne) {","        /* Validates if the number of parameter passed in is 2 and the second parameter is a callback */","        if (arguments.length != 2 || typeof callbackOne != \"function\") {","            console.error(\"Please provide the correct number of parameters and a callback function!\");","            return;","        }","","        /* If an array is passed in then loops through and gets each student */","        if (Array.isArray(input)) {","            for (var student in input) {","                getStudent(input[student], callbackOne);","            }","        }","        else {","            getStudent(input, callbackOne);","        }","    };","","    /* EXPORTS the psd-api in node */","    module.exports = pub;","}).call(this);",">>>>>>> ccc6686f217d05a2d34c5e195b5e9396fd638450",""]}],[{"start":{"row":348,"column":0},"end":{"row":708,"column":0},"action":"remove","lines":[" ","======="," *     PENN STATE DIRECTORY API         *"," ****************************************/","(function() {","    /* Imports */","    var request = require('request');","    var querystring = require('querystring');","    var cheerio = require('cheerio');","","    // Polyfill for Object.assign and String.endsWith","    var objectAssign = require('object-assign');","    require('string.prototype.endswith');","","    /* Public object that will contain the public functions that are going to be exported */","    var pub = {};","    /* Private object that  will contain the private functions that will not be exported */","    var priv = {};","","    /**","     * psd-api namespace","     *","     */","    var getStudent = function(options, callbackOne) {","        priv.Student = {}, // student","            priv.form = {}, // form","            priv.directoryPage = {}, // directory page that is returned from the server","            priv.directoryPage.desc = [], // description elements from the directory page","            priv.directoryPage.data = []; // data elements from the directory page","","","        /* Selectors used for searching HTML */","        priv.selectors = {","            TABLES: \"body > div > form > table\", // the selector for all the tables on the page for all the students","            MATCHES: \"b\", // the number of MATCHES for each student","            DESC: \"th\", // the descriptions of the student such as name, email, etc","            DATA: \"td\" // the data for the descriptions","        };","","        /**","        * Generates new query object for the form.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.newQuery = function(firstName, lastName, userID, email) {","            return {","                'cn': firstName,","                'sn': lastName,","                'uid': userID, // name=uid attribute in search page","                'mail': email // name=mail attribute in search page","            };","        };","","        /* Validation object that contains the different validation methods */","        priv.validate = {","            /* Validates the passed in parameter options */","            options: function(str) {","                return /^[a-zA-Z]+$/.test(str);","            },","","            /* Checks if passed in parameter is an email */","            email: function(str) {","                return str.endsWith(\"@psu.edu\");","            },","","            /* Checks if passed in parameter contains a number, which means it is an id */","            /* This validation happens AFTER checking if the string is an email */","            userID: function(str) {","                var isNumber, userID = str.match(/\\d+/g);","                if (userID != null) {","                    isNumber = true;","                }","                else {","                    isNumber = false;","                }","                return isNumber;","            },","","            /* Determines if the option parameter is an object */","            isobjectValid: function() {","                var objKeys = Object.keys(options);","","                /* Checks every value in the options object and Incase the string contains non-alphabet characters */","                for(var i=0; i<objKeys.length; i++){","","                    /* Validates first and last name and ensures that there is both of them */","                    if(objKeys[0] === 'firstName' && objKeys[1] === 'lastName'){","                        if ((typeof objKeys[0] != \"string\") && (typeof objKeys[1] != 'string')) {","                            throw new Error(\"Please provide the correct format for first and last name!\");","                        }","                    }","","                    /* Validates the user id */","                    else if(objKeys[0] === 'firstName' && objKeys[1] != 'lastName'){","                        throw new Error(\"Please provide a last name!\");","                    }","","                    /* Validates the user id */","                    else if (objKeys[i] === \"userID\") {","                        if (priv.validate.userID(options[\"userID\"])) return true;","                        else return false;","                    }","","                    /* Validates the email */","                    else if (objKeys[i] === \"email\") {","                        if ((priv.validate.email(options['email']) === false)) {","                            throw new Error(\"Invalid Object format!\");","                        }","                    }","","                    else {","                        throw new Error(\"Invalid Object format!\");","                    }","                }","                return true;","            }","        };","","        /**","        * Fills the student info object.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.fillStudentObj = function(firstName, lastName, userID, email) {","            priv.Student.firstName = firstName;","            priv.Student.lastName = lastName;","            priv.Student.userID = userID;","            priv.Student.email = email;","        };","","        /**","        * @function","        * Initializes the Student object depending on the passed in string.","        */","        priv.initStrStudent = function() {","            /* Checks if passed in parameter is an email */","            if (priv.validate.email(options)) {","                priv.fillStudentObj(\"\", \"\", \"\", options);","            }","","            /* Checks if passed in parameter is an id */","            else if (priv.validate.userID(options)) {","                priv.fillStudentObj(\"\", \"\", options, \"\");","            }","","            /* Passed in parameter is not an object, email, or id, so it must be a name */","            else {","                var input = options.split(\" \");","                if (input.length === 2) {","                    priv.fillStudentObj(input[0], input[1]);","                }","                else {","                    console.error(\"Please enter a first and last name!\");","                    return;","                }","            }","        };","","        /**","        * @function","        * Initializes the student information passed in as options.","        */","        priv.initStudent = function() {","            /* Checks if the passed in is valid object */","            if (typeof options === \"object\") {","                if (priv.validate.isobjectValid()) {","                    objectAssign(priv.Student, options);","                }","            }","","            /* Checks if the passed in parameter is a string */","            else if (typeof options === \"string\") {","                priv.initStrStudent();","            }","        }();","","        /* Form object that will contain the form data that will be sent in the post request */","        priv.form.data = priv.newQuery(priv.Student.firstName, priv.Student.lastName, priv.Student.userID, priv.Student.email);","        priv.form.stringFormData = querystring.stringify(priv.form.data); /* Contains the stringified data */","        priv.form.contentLength = priv.form.stringFormData.length; /* Contains the size of the data that is sent in post request */","        priv.form.dirLink = 'http://www.work.psu.edu/cgi-bin/ldap/ldap_query.cgi'; /* Penn State Directory link for scraping */","","        /* Request options that contain the appropriate request headers, url, body, and method for sending the post request */","        priv.form.reqOptions = {","            headers: {","                'Content-Length': priv.form.contentLength,","                'Content-Type': 'application/x-www-form-urlencoded'","            },","            url: priv.form.dirLink,","            body: priv.form.stringFormData,","            method: 'POST'","        };","","        /**","        * Removes all line breaks and colons in the data retrieved.","        * @function","        * @param {array} arr - The array of strings that make up the response from the POST request???.","        */","        priv.removeLinBr = function(arr) {","            for (var str in arr) {","                arr[str] = arr[str].trim();","                arr[str] = arr[str].replace(/:/g, '');","","                /* Seperates the emails with commas */","                if (priv.validate.email(arr[str])) {","                    arr[str] = arr[str].replace(/\\n+/g, ', ');","                }","            }","        };","","        /**","        * Finds if there is a match.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.isStudentFound = function($) {","            if ($(priv.selectors.MATCHES).text().indexOf(\"0 matches\", 0) == 0 || options === \"\") {","                return false;","            } else {","                return true;","            }","        };","","        /**","        * Formats the data that is received from the HTML page by removing first entry and line breaks.","        * @function","        */","        priv.formatData = function() {","            priv.directoryPage.desc.shift();","            priv.removeLinBr(priv.directoryPage.desc);","            priv.removeLinBr(priv.directoryPage.data);","        };","","        /**","        * Queries the HTML page for the students information.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.extractData = function($) {","            priv.directoryPage.data = [], priv.directoryPage.desc = []; // resets the student data and description array","            priv.forms = [];","            var tables = $(priv.selectors.TABLES);","            priv.studs = [];","            tables.each(function(key){","                var table = $(this).text();","                priv.studs.push(table);","                // console.log(table);","            });","","            $(priv.selectors.DESC).each(function() {","                priv.directoryPage.desc.push($(this).text());","            });","","            $(priv.selectors.DATA).each(function() {","                priv.directoryPage.data.push($(this).text());","            });","        };","","        /**","        * Initializes the Student object with the correct properties and values.","        * @function","        */","        priv.initStudentData = function() {","            priv.Student = {};","            for (var studKey in priv.directoryPage.data) {","                var studProp = priv.directoryPage.desc[studKey];","                priv.Student[studProp] = priv.directoryPage.data[studKey];","            }","        };","","        /**","        * Queries the student page for the table headers and table data.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.getStudentInfo = function($) {","            priv.extractData($);","            priv.formatData();","            priv.initStudentData();","        };","","        /**","        * Finds the students info on the given HTML page.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.findStudent = function(htmlPage) {","            /* Library used to parse HTML  */","            var $ = cheerio.load(htmlPage);","","            /* Checks if the student is found */","            if (priv.isStudentFound($)) {","                priv.getStudentInfo($);","            }","            else {","                if (options != \"\") priv.Student = null;","                else console.error(\"Please enter a student!\");","            }","        };","","        /**","        * Scrapes the students HTML page that is received from the server.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.scrape = function(htmlPage) {","            priv.findStudent(htmlPage);","        };","","        /**","        * Callback that executes after the student information is returned.","        * @function","        * @param {boolean} err - Whether or not an error ocurred.","        * @param {string} res - The respone object.","        * @param {object} html - the body of the request.","        */","        var callback = function(err, res, html) {","            if (err) throw new Error('Error in retrieving student informaton');","            priv.scrape(res.body);","            callbackOne(priv.Student);","        };","","        /* Sends the request */","        request(priv.form.reqOptions, callback);","    };","","    /**","    * Allows you to pass in array of students for searching.","    * @function","    * @param {String or Object} input - input that is queried in the penn state directory.","    * @param {function} callbackOne - First callback function.","    */","    pub.get = function(input, callbackOne) {","        /* Validates if the number of parameter passed in is 2 and the second parameter is a callback */","        if (arguments.length != 2 || typeof callbackOne != \"function\") {","            console.error(\"Please provide the correct number of parameters and a callback function!\");","            return;","        }","","        /* If an array is passed in then loops through and gets each student */","        if (Array.isArray(input)) {","            for (var student in input) {","                getStudent(input[student], callbackOne);","            }","        }","        else {","            getStudent(input, callbackOne);","        }","    };","","    /* EXPORTS the psd-api in node */","    module.exports = pub;","}).call(this);",">>>>>>> ccc6686f217d05a2d34c5e195b5e9396fd638450",""],"id":913}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":12},"action":"remove","lines":["<<<<<<< HEAD"],"id":914}],[{"start":{"row":0,"column":42},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":915}],[{"start":{"row":0,"column":0},"end":{"row":346,"column":15},"action":"remove","lines":[" /****************************************","  *     PENN STATE DIRECTORY API         *","  ****************************************/"," (function() {","     /* Imports */","     var request = require('request');","     var querystring = require('querystring');","     var cheerio = require('cheerio');","","     /* Public object that will contain the public functions that are going to be exported */","     var pub = {};","     /* Private object that  will contain the private functions that will not be exported */","     var priv = {};","","     /**","      * psd-api namespace","      *","      */","     var getStudent = function(options, callbackOne) {","         priv.Student = {}, // student ","             priv.form = {}, // form","             priv.directoryPage = {}, // directory page that is returned from the server","             priv.directoryPage.desc = [], // description elements from the directory page","             priv.directoryPage.data = []; // data elements from the directory page","","","         /* Selectors used for searching HTML */","         priv.selectors = {","             TABLES: \"body > div > form > table\", // the selector for all the tables on the page for all the students","             MATCHES: \"b\", // the number of MATCHES for each student","             DESC: \"th\", // the descriptions of the student such as name, email, etc","             DATA: \"td\" // the data for the descriptions","         };","","         /**","          * Generates new query object for the form.","          * @function","          * @param {string} firstName - The first name of the person.","          * @param {string} lastName - The last name of the person.","          * @param {string} userID - The user id of the person.","          * @param {string} email - The email of the person.","          */","         priv.newQuery = function(firstName, lastName, userID, email) {","             return {","                 'cn': firstName,","                 'sn': lastName,","                 'uid': userID, // name=uid attribute in search page","                 'mail': email // name=mail attribute in search page","             };","         };","","         /* Validation object that contains the different validation methods */","         priv.validate = {","             /* Validates the passed in parameter options */","             options: function(str) {","                 return /^[a-zA-Z]+$/.test(str);","             },","","             /* Checks if passed in parameter is an email */","             email: function(str) {","                 return str.endsWith(\"@psu.edu\");","             },","","             /* Checks if passed in parameter contains a number, which means it is an id */","             /* This validation happens AFTER checking if the string is an email */","             userID: function(str) {","                 var isNumber, userID = str.match(/\\d+/g);","                 if (userID != null) {","                     isNumber = true;","                 }","                 else {","                     isNumber = false;","                 }","                 return isNumber;","             },","","             /* Determines if the option parameter is an object */","             isobjectValid: function() {","                 var objKeys = Object.keys(options);","","                 /* Checks every value in the options object and Incase the string contains non-alphabet characters */","                 for (var i = 0; i < objKeys.length; i++) {","","                     /* Validates first and last name and ensures that there is both of them */","                     if (objKeys[0] === 'firstName' && objKeys[1] === 'lastName') {","                         if ((typeof objKeys[0] != \"string\") && (typeof objKeys[1] != 'string')) {","                             throw new Error(\"Please provide the correct format for first and last name!\");","                         }","                     }","","                     /* Validates the user id */","                     else if (objKeys[0] === 'firstName' && objKeys[1] != 'lastName') {","                         throw new Error(\"Please provide a last name!\");","                     }","","                     /* Validates the user id */","                     else if (objKeys[i] === \"userID\") {","                         if (priv.validate.userID(options[\"userID\"])) return true;","                         else return false;","                     }","","                     /* Validates the email */","                     else if (objKeys[i] === \"email\") {","                         if ((priv.validate.email(options['email']) === false)) {","                             throw new Error(\"Invalid Object format!\");","                         }","                     }","","                     else {","                         throw new Error(\"Invalid Object format!\");","                     }","                 }","                 return true;","             }","         };","","         /**","          * Fills the student info object.","          * @function","          * @param {string} firstName - The first name of the person.","          * @param {string} lastName - The last name of the person.","          * @param {string} userID - The user id of the person.","          * @param {string} email - The email of the person.","          */","         priv.fillStudentObj = function(firstName, lastName, userID, email) {","             priv.Student.firstName = firstName;","             priv.Student.lastName = lastName;","             priv.Student.userID = userID;","             priv.Student.email = email;","         };","","         /**","          * @function","          * Initializes the Student object depending on the passed in string. ","          */","         priv.initStrStudent = function() {","             /* Checks if passed in parameter is an email */","             if (priv.validate.email(options)) {","                 priv.fillStudentObj(\"\", \"\", \"\", options);","             }","","             /* Checks if passed in parameter is an id */","             else if (priv.validate.userID(options)) {","                 priv.fillStudentObj(\"\", \"\", options, \"\");","             }","","             /* Passed in parameter is not an object, email, or id, so it must be a name */","             else {","                 var input = options.split(\" \");","                 if (input.length === 2) {","                     priv.fillStudentObj(input[0], input[1]);","                 }","                 else {","                     console.error(\"Please enter a first and last name!\");","                     return;","                 }","             }","         };","","         /**","          * @function ","          * Initializes the student information passed in as options.","          */","         priv.initStudent = function() {","             /* Checks if the passed in is valid object */","             if (typeof options === \"object\") {","                 if (priv.validate.isobjectValid()) {","                     Object.assign(priv.Student, options);","                 }","             }","","             /* Checks if the passed in parameter is a string */","             else if (typeof options === \"string\") {","                 priv.initStrStudent();","             }","         }();","","         /* Form object that will contain the form data that will be sent in the post request */","         priv.form.data = priv.newQuery(priv.Student.firstName, priv.Student.lastName, priv.Student.userID, priv.Student.email);","         priv.form.stringFormData = querystring.stringify(priv.form.data); /* Contains the stringified data */","         priv.form.contentLength = priv.form.stringFormData.length; /* Contains the size of the data that is sent in post request */","         priv.form.dirLink = 'http://www.work.psu.edu/cgi-bin/ldap/ldap_query.cgi'; /* Penn State Directory link for scraping */","","         /* Request options that contain the appropriate request headers, url, body, and method for sending the post request */","         priv.form.reqOptions = {","             headers: {","                 'Content-Length': priv.form.contentLength,","                 'Content-Type': 'application/x-www-form-urlencoded'","             },","             url: priv.form.dirLink,","             body: priv.form.stringFormData,","             method: 'POST'","         };","","         /**","          * Removes all line breaks and colons in the data retrieved.","          * @function","          * @param {array} arr - The array of strings that make up the response from the POST request???.","          */","         priv.removeLinBr = function(arr) {","             for (var str in arr) {","                 arr[str] = arr[str].trim();","                 arr[str] = arr[str].replace(/:/g, '');","","                 /* Seperates the emails with commas */","                 if (priv.validate.email(arr[str])) {","                     arr[str] = arr[str].replace(/\\n+/g, ', ');","                 }","             }","         };","","         /**","          * Finds if there is a match.","          * @function","          * @param {$} $ - Cheerio object that is used to query the given html","          */","         priv.isStudentFound = function($) {","             if ($(priv.selectors.MATCHES).text().indexOf(\"0 matches\", 0) == 0 || options === \"\") {","                 return false;","             }","             else {","                 return true;","             }","         };","","         /**","          * Formats the data that is received from the HTML page by removing first entry and line breaks.","          * @function","          */","         priv.formatData = function() {","             priv.directoryPage.desc.shift();","             priv.removeLinBr(priv.directoryPage.desc);","             priv.removeLinBr(priv.directoryPage.data);","         };","","         /**","          * Queries the HTML page for the students information.","          * @function","          * @param {$} $ - Cheerio object that is used to query the given html","          */","         priv.extractData = function($) {","             priv.directoryPage.data = [], priv.directoryPage.desc = []; // resets the student data and description array","","             $(priv.selectors.DESC).each(function() {","                 priv.directoryPage.desc.push($(this).text());","             });","","             $(priv.selectors.DATA).each(function() {","                 priv.directoryPage.data.push($(this).text());","             });","         };","","         /**","          * Initializes the Student object with the correct properties and values.","          * @function","          */","         priv.initStudentData = function() {","             priv.Student = {};","             for (var studKey in priv.directoryPage.data) {","                 var studProp = priv.directoryPage.desc[studKey];","                 priv.Student[studProp] = priv.directoryPage.data[studKey];","             }","         };","","         /**","          * Queries the student page for the table headers and table data.","          * @function","          * @param {$} $ - Cheerio object that is used to query the given html","          */","         priv.getStudentInfo = function($) {","             priv.extractData($);","             priv.formatData();","             priv.initStudentData();","         };","","         /**","          * Finds the students info on the given HTML page.","          * @function","          * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","          */","         priv.findStudent = function(htmlPage) {","             /* Library used to parse HTML  */","             var $ = cheerio.load(htmlPage);","","             /* Checks if the student is found */","             if (priv.isStudentFound($)) {","                 priv.getStudentInfo($);","             }","             else {","                 if (options != \"\") priv.Student = null;","                 else console.error(\"Please enter a student!\");","             }","         };","","         /**","          * Scrapes the students HTML page that is received from the server.","          * @function","          * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","          */","         priv.scrape = function(htmlPage) {","             priv.findStudent(htmlPage);","         };","","         /**","          * Callback that executes after the student information is returned.","          * @function","          * @param {boolean} err - Whether or not an error ocurred.","          * @param {string} res - The respone object.","          * @param {object} html - the body of the request.","          */","         var callback = function(err, res, html) {","             if (err) throw new Error('Error in retrieving student informaton');","             priv.scrape(res.body);","             callbackOne(priv.Student);","         };","","         /* Sends the request */","         request(priv.form.reqOptions, callback);","     };","","     /**","      * Allows you to pass in array of students for searching.","      * @function","      * @param {String or Object} input - input that is queried in the penn state directory.","      * @param {function} callbackOne - First callback function.","      */","     pub.get = function(input, callbackOne) {","         /* Validates if the number of parameter passed in is 2 and the second parameter is a callback */","         if (arguments.length != 2 || typeof callbackOne != \"function\") {","             console.error(\"Please provide the correct number of parameters and a callback function!\");","             return;","         }","","         /* If an array is passed in then loops through and gets each student */","         if (Array.isArray(input)) {","             for (var student in input) {","                 getStudent(input[student], callbackOne);","             }","         }","         else {","             getStudent(input, callbackOne);","         }","     };","","     /* EXPORTS the psd-api in node */","     module.exports = pub;"," }).call(this);"],"id":916},{"start":{"row":0,"column":0},"end":{"row":357,"column":14},"action":"insert","lines":[" /****************************************"," *     PENN STATE DIRECTORY API         *"," ****************************************/","(function() {","    /* Imports */","    var request = require('request');","    var querystring = require('querystring');","    var cheerio = require('cheerio');","","    // Polyfill for Object.assign and String.endsWith","    var objectAssign = require('object-assign');","    require('string.prototype.endswith');","","    /* Public object that will contain the public functions that are going to be exported */","    var pub = {};","    /* Private object that  will contain the private functions that will not be exported */","    var priv = {};","","    /**","     * psd-api namespace","     *","     */","    var getStudent = function(options, callbackOne) {","        priv.Student = {}, // student","            priv.form = {}, // form","            priv.directoryPage = {}, // directory page that is returned from the server","            priv.directoryPage.desc = [], // description elements from the directory page","            priv.directoryPage.data = []; // data elements from the directory page","","","        /* Selectors used for searching HTML */","        priv.selectors = {","            TABLES: \"body > div > form > table\", // the selector for all the tables on the page for all the students","            MATCHES: \"b\", // the number of MATCHES for each student","            DESC: \"th\", // the descriptions of the student such as name, email, etc","            DATA: \"td\" // the data for the descriptions","        };","","        /**","        * Generates new query object for the form.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.newQuery = function(firstName, lastName, userID, email) {","            return {","                'cn': firstName,","                'sn': lastName,","                'uid': userID, // name=uid attribute in search page","                'mail': email // name=mail attribute in search page","            };","        };","","        /* Validation object that contains the different validation methods */","        priv.validate = {","            /* Validates the passed in parameter options */","            options: function(str) {","                return /^[a-zA-Z]+$/.test(str);","            },","","            /* Checks if passed in parameter is an email */","            email: function(str) {","                return str.endsWith(\"@psu.edu\");","            },","","            /* Checks if passed in parameter contains a number, which means it is an id */","            /* This validation happens AFTER checking if the string is an email */","            userID: function(str) {","                var isNumber, userID = str.match(/\\d+/g);","                if (userID != null) {","                    isNumber = true;","                }","                else {","                    isNumber = false;","                }","                return isNumber;","            },","","            /* Determines if the option parameter is an object */","            isobjectValid: function() {","                var objKeys = Object.keys(options);","","                /* Checks every value in the options object and Incase the string contains non-alphabet characters */","                for(var i=0; i<objKeys.length; i++){","","                    /* Validates first and last name and ensures that there is both of them */","                    if(objKeys[0] === 'firstName' && objKeys[1] === 'lastName'){","                        if ((typeof objKeys[0] != \"string\") && (typeof objKeys[1] != 'string')) {","                            throw new Error(\"Please provide the correct format for first and last name!\");","                        }","                    }","","                    /* Validates the user id */","                    else if(objKeys[0] === 'firstName' && objKeys[1] != 'lastName'){","                        throw new Error(\"Please provide a last name!\");","                    }","","                    /* Validates the user id */","                    else if (objKeys[i] === \"userID\") {","                        if (priv.validate.userID(options[\"userID\"])) return true;","                        else return false;","                    }","","                    /* Validates the email */","                    else if (objKeys[i] === \"email\") {","                        if ((priv.validate.email(options['email']) === false)) {","                            throw new Error(\"Invalid Object format!\");","                        }","                    }","","                    else {","                        throw new Error(\"Invalid Object format!\");","                    }","                }","                return true;","            }","        };","","        /**","        * Fills the student info object.","        * @function","        * @param {string} firstName - The first name of the person.","        * @param {string} lastName - The last name of the person.","        * @param {string} userID - The user id of the person.","        * @param {string} email - The email of the person.","        */","        priv.fillStudentObj = function(firstName, lastName, userID, email) {","            priv.Student.firstName = firstName;","            priv.Student.lastName = lastName;","            priv.Student.userID = userID;","            priv.Student.email = email;","        };","","        /**","        * @function","        * Initializes the Student object depending on the passed in string.","        */","        priv.initStrStudent = function() {","            /* Checks if passed in parameter is an email */","            if (priv.validate.email(options)) {","                priv.fillStudentObj(\"\", \"\", \"\", options);","            }","","            /* Checks if passed in parameter is an id */","            else if (priv.validate.userID(options)) {","                priv.fillStudentObj(\"\", \"\", options, \"\");","            }","","            /* Passed in parameter is not an object, email, or id, so it must be a name */","            else {","                var input = options.split(\" \");","                if (input.length === 2) {","                    priv.fillStudentObj(input[0], input[1]);","                }","                else {","                    console.error(\"Please enter a first and last name!\");","                    return;","                }","            }","        };","","        /**","        * @function","        * Initializes the student information passed in as options.","        */","        priv.initStudent = function() {","            /* Checks if the passed in is valid object */","            if (typeof options === \"object\") {","                if (priv.validate.isobjectValid()) {","                    objectAssign(priv.Student, options);","                }","            }","","            /* Checks if the passed in parameter is a string */","            else if (typeof options === \"string\") {","                priv.initStrStudent();","            }","        }();","","        /* Form object that will contain the form data that will be sent in the post request */","        priv.form.data = priv.newQuery(priv.Student.firstName, priv.Student.lastName, priv.Student.userID, priv.Student.email);","        priv.form.stringFormData = querystring.stringify(priv.form.data); /* Contains the stringified data */","        priv.form.contentLength = priv.form.stringFormData.length; /* Contains the size of the data that is sent in post request */","        priv.form.dirLink = 'http://www.work.psu.edu/cgi-bin/ldap/ldap_query.cgi'; /* Penn State Directory link for scraping */","","        /* Request options that contain the appropriate request headers, url, body, and method for sending the post request */","        priv.form.reqOptions = {","            headers: {","                'Content-Length': priv.form.contentLength,","                'Content-Type': 'application/x-www-form-urlencoded'","            },","            url: priv.form.dirLink,","            body: priv.form.stringFormData,","            method: 'POST'","        };","","        /**","        * Removes all line breaks and colons in the data retrieved.","        * @function","        * @param {array} arr - The array of strings that make up the response from the POST request???.","        */","        priv.removeLinBr = function(arr) {","            for (var str in arr) {","                arr[str] = arr[str].trim();","                arr[str] = arr[str].replace(/:/g, '');","","                /* Seperates the emails with commas */","                if (priv.validate.email(arr[str])) {","                    arr[str] = arr[str].replace(/\\n+/g, ', ');","                }","            }","        };","","        /**","        * Finds if there is a match.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.isStudentFound = function($) {","            if ($(priv.selectors.MATCHES).text().indexOf(\"0 matches\", 0) == 0 || options === \"\") {","                return false;","            } else {","                return true;","            }","        };","","        /**","        * Formats the data that is received from the HTML page by removing first entry and line breaks.","        * @function","        */","        priv.formatData = function() {","            priv.directoryPage.desc.shift();","            priv.removeLinBr(priv.directoryPage.desc);","            priv.removeLinBr(priv.directoryPage.data);","        };","","        /**","        * Queries the HTML page for the students information.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.extractData = function($) {","            priv.directoryPage.data = [], priv.directoryPage.desc = []; // resets the student data and description array","            priv.forms = [];","            var tables = $(priv.selectors.TABLES);","            priv.studs = [];","            tables.each(function(key){","                var table = $(this).text();","                priv.studs.push(table);","                // console.log(table);","            });","","            $(priv.selectors.DESC).each(function() {","                priv.directoryPage.desc.push($(this).text());","            });","","            $(priv.selectors.DATA).each(function() {","                priv.directoryPage.data.push($(this).text());","            });","        };","","        /**","        * Initializes the Student object with the correct properties and values.","        * @function","        */","        priv.initStudentData = function() {","            priv.Student = {};","            for (var studKey in priv.directoryPage.data) {","                var studProp = priv.directoryPage.desc[studKey];","                priv.Student[studProp] = priv.directoryPage.data[studKey];","            }","        };","","        /**","        * Queries the student page for the table headers and table data.","        * @function","        * @param {$} $ - Cheerio object that is used to query the given html","        */","        priv.getStudentInfo = function($) {","            priv.extractData($);","            priv.formatData();","            priv.initStudentData();","        };","","        /**","        * Finds the students info on the given HTML page.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.findStudent = function(htmlPage) {","            /* Library used to parse HTML  */","            var $ = cheerio.load(htmlPage);","","            /* Checks if the student is found */","            if (priv.isStudentFound($)) {","                priv.getStudentInfo($);","            }","            else {","                if (options != \"\") priv.Student = null;","                else console.error(\"Please enter a student!\");","            }","        };","","        /**","        * Scrapes the students HTML page that is received from the server.","        * @function","        * @param {string} htmlPage - String representing the HTML recieved from the POST request???.","        */","        priv.scrape = function(htmlPage) {","            priv.findStudent(htmlPage);","        };","","        /**","        * Callback that executes after the student information is returned.","        * @function","        * @param {boolean} err - Whether or not an error ocurred.","        * @param {string} res - The respone object.","        * @param {object} html - the body of the request.","        */","        var callback = function(err, res, html) {","            if (err) throw new Error('Error in retrieving student informaton');","            priv.scrape(res.body);","            callbackOne(priv.Student);","        };","","        /* Sends the request */","        request(priv.form.reqOptions, callback);","    };","","    /**","    * Allows you to pass in array of students for searching.","    * @function","    * @param {String or Object} input - input that is queried in the penn state directory.","    * @param {function} callbackOne - First callback function.","    */","    pub.get = function(input, callbackOne) {","        /* Validates if the number of parameter passed in is 2 and the second parameter is a callback */","        if (arguments.length != 2 || typeof callbackOne != \"function\") {","            console.error(\"Please provide the correct number of parameters and a callback function!\");","            return;","        }","","        /* If an array is passed in then loops through and gets each student */","        if (Array.isArray(input)) {","            for (var student in input) {","                getStudent(input[student], callbackOne);","            }","        }","        else {","            getStudent(input, callbackOne);","        }","    };","","    /* EXPORTS the psd-api in node */","    module.exports = pub;","}).call(this);"]}]]},"ace":{"folds":[],"scrolltop":7416,"scrollleft":0,"selection":{"start":{"row":357,"column":14},"end":{"row":357,"column":14},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":336,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1460574404753,"hash":"58593fd0165137d90ef4a871385148503bdcd053"}